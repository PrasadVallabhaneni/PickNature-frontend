[{"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/index.js":"1","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/App.js":"2","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/reportWebVitals.js":"3","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/Header.js":"4","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/Footer.js":"5","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/HomePage.js":"6","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/Product.js":"7","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/Rating.js":"8","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/ProductsPage.js":"9","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/store.js":"10","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/reducers/productReducers.js":"11","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/constants/productConstants.js":"12","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/actions/productActions.js":"13","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/Message.js":"14","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/Loader.js":"15","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/CartPage.js":"16","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/reducers/cartReducers.js":"17","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/constants/cartConstants.js":"18","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/actions/cartActions.js":"19","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/reducers/userReducers.js":"20","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/constants/userConstants.js":"21","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/LoginPage.js":"22","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/actions/userActions.js":"23","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/FormContainer.js":"24","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/ProfilePage.js":"25","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/RegisterPage.js":"26","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/ShippingPage.js":"27","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/CheckoutSteps.js":"28","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/PaymentPage.js":"29","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/PlaceOrderPage.js":"30","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/reducers/orderReducers.js":"31","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/constants/orderConstants.js":"32","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/actions/orderActions.js":"33","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/OrderPage.js":"34"},{"size":595,"mtime":1609827891249,"results":"35","hashOfConfig":"36"},{"size":1517,"mtime":1610734995514,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":1608874384004,"results":"38","hashOfConfig":"36"},{"size":1961,"mtime":1610867733525,"results":"39","hashOfConfig":"36"},{"size":387,"mtime":1608878674380,"results":"40","hashOfConfig":"36"},{"size":1064,"mtime":1610868058353,"results":"41","hashOfConfig":"36"},{"size":912,"mtime":1610870873036,"results":"42","hashOfConfig":"36"},{"size":1582,"mtime":1608962763485,"results":"43","hashOfConfig":"36"},{"size":3977,"mtime":1609914429592,"results":"44","hashOfConfig":"36"},{"size":1588,"mtime":1610807870853,"results":"45","hashOfConfig":"36"},{"size":1021,"mtime":1609866561704,"results":"46","hashOfConfig":"36"},{"size":367,"mtime":1609859270809,"results":"47","hashOfConfig":"36"},{"size":904,"mtime":1609861087365,"results":"48","hashOfConfig":"36"},{"size":223,"mtime":1609838336118,"results":"49","hashOfConfig":"36"},{"size":281,"mtime":1609837974699,"results":"50","hashOfConfig":"36"},{"size":3607,"mtime":1610866865596,"results":"51","hashOfConfig":"36"},{"size":1214,"mtime":1610692076271,"results":"52","hashOfConfig":"36"},{"size":233,"mtime":1610691710979,"results":"53","hashOfConfig":"36"},{"size":1236,"mtime":1610691810558,"results":"54","hashOfConfig":"36"},{"size":2103,"mtime":1610633379708,"results":"55","hashOfConfig":"36"},{"size":1500,"mtime":1610297059191,"results":"56","hashOfConfig":"36"},{"size":2457,"mtime":1610632639755,"results":"57","hashOfConfig":"36"},{"size":3743,"mtime":1610633851021,"results":"58","hashOfConfig":"36"},{"size":363,"mtime":1610035279047,"results":"59","hashOfConfig":"36"},{"size":4024,"mtime":1610635055474,"results":"60","hashOfConfig":"36"},{"size":3321,"mtime":1610632614468,"results":"61","hashOfConfig":"36"},{"size":2603,"mtime":1610648449757,"results":"62","hashOfConfig":"36"},{"size":1249,"mtime":1610648108483,"results":"63","hashOfConfig":"36"},{"size":1505,"mtime":1610691650041,"results":"64","hashOfConfig":"36"},{"size":5351,"mtime":1610722515156,"results":"65","hashOfConfig":"36"},{"size":1843,"mtime":1610807681881,"results":"66","hashOfConfig":"36"},{"size":618,"mtime":1610728436588,"results":"67","hashOfConfig":"36"},{"size":2596,"mtime":1610808898421,"results":"68","hashOfConfig":"36"},{"size":7059,"mtime":1610820402428,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"uoeksv",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/index.js",[],["146","147"],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/App.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/reportWebVitals.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/Header.js",["148"],"import React,{useState} from \"react\";\nimport {useDispatch,useSelector} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport {LinkContainer} from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from \"react-bootstrap\";\nimport {logout} from '../actions/userActions';\nconst Header = () => {\n  const dispatch=useDispatch();\n  const userLogin=useSelector((state)=>state.userLogin);\n  // const userInfo=localStorage.getItem('userInfo');\n  const {userInfo}=userLogin\n  const logoutHandler=()=>{\n   dispatch(logout())\n   \n  }\n  return (\n    <header>\n      <Navbar bg=\"light\" expand=\"lg\" collapseOnSelect>\n        <Container>\n          <Link to=\"/\">\n            <Navbar.Brand style={{ color: \"green\" }}>\n              Pick Nature <i class=\"fab fa-canadian-maple-leaf\"></i>\n            </Navbar.Brand>\n          </Link>\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\">\n            <Nav className=\"ml-auto\">\n              <LinkContainer to=\"/cart\">\n                <Nav.Link>\n                  <i className=\"fas fa-shopping-cart\"> </i>&nbsp; Cart\n                </Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id=\"username\">\n                  <LinkContainer to=\"/profile\">\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\n                  </LinkContainer>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to=\"/login\">\n                  <Nav.Link>\n                    <i className=\"fas fa-user\"></i>&nbsp;Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  );\n};\n\nexport default Header;\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/Footer.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/HomePage.js",["149","150"],"import {React, useState,useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Row, Col} from 'react-bootstrap';\nimport Product from '../components/Product';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport {listProducts} from '../actions/productActions';\nconst HomePage = () => {\n\nconst dispatch=useDispatch();\nconst productList=useSelector(state=>state.productList)\nconst {loading,error,products}=productList \n    useEffect(async ()=>{\n        dispatch(listProducts())\n    },[dispatch])\n//   const products=[]  \n    return (\n      <> \n        <h1>Choose Plants to plant</h1>\n        {loading ? (\n         <Loader/>\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Row>\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n        )}\n      </>\n    );\n}\n\nexport default HomePage\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/Product.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/Rating.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/ProductsPage.js",["151","152","153"],"import { React, useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Row,\n  Col,\n  Image,\n  ListGroup,\n  Card,\n  Button,\n  Container,Form,ListGroupItem\n} from \"react-bootstrap\";\nimport Rating from \"../components/Rating\";\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { listProductDetails } from \"../actions/productActions\";\nconst ProductsPage = (props) => {\n\n  const [qty,setQty]=useState(1);\n  const dispatch = useDispatch();\n  const productDetails = useSelector((state) => state.productDetails);\n  const { loading, error, product } = productDetails;\n   const addToCart=()=>{\n     props.history.push(`/cart/${props.match.params.id}?qty=${qty}`)\n   }\n  useEffect(async () => {\n    //  console.log(product)\n    dispatch(listProductDetails(props.match.params.id));\n  }, []);\n\n  return (\n    <Container>\n      <Link to=\"/\" className=\"my-3\">\n        <button type=\"button\" class=\"btn btn-warning\">\n          Go Back\n        </button>\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\">{error}</Message>\n      ) : (\n        <Row>\n          <Col md={6} className=\"my-3\">\n            <Image src={product.image} alt={product.name} fluid />\n          </Col>\n          <Col md={3}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h3>{product.name}</h3>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Rating\n                  value={product.rating}\n                  text={`${product.numReviews} reviews`}\n                  color=\"#f8e825\"\n                ></Rating>\n              </ListGroup.Item>\n              <ListGroup.Item>Price: ₹{product.price}</ListGroup.Item>\n              <ListGroup.Item>\n                Description: {product.description}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={3}>\n            <Card>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Price:</Col>\n                    <Col>\n                      <strong>₹{product.price}</strong>\n                    </Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Status:</Col>\n                    {product.countInStock > 0 ? (\n                      <Col style={{ color: \"blue\" }}>In Stock</Col>\n                    ) : (\n                      <Col style={{ color: \"red\" }}>Out of Stock</Col>\n                    )}\n                  </Row>\n                </ListGroup.Item>\n                {product.countInStock>0 && (\n                  <ListGroupItem>\n                    <Row>\n                      <Col>\n                        Qty\n                      </Col>\n                      <Col>\n                        <Form.Control as='select' value={qty} onChange={(e)=>setQty(e.target.value)}>\n                        {\n                        [...Array(product.countInStock).keys()].map(x=>(\n                          <option key={x+1} value={x+1}>\n                           {x+1}\n                          </option>\n                        ))\n                        }\n                        </Form.Control>\n                      </Col>\n                    </Row>\n                  </ListGroupItem>\n                )}\n                <ListGroup.Item>\n                  <Button\n                    className=\"btn-block btn-secondary\"\n                    type=\"button\"\n                    disabled={product.countInStock == 0}\n                    onClick={addToCart}\n                  >\n                    Add to Cart\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n};\n\nexport default ProductsPage;\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/store.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/reducers/productReducers.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/constants/productConstants.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/actions/productActions.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/Message.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/Loader.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/CartPage.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/reducers/cartReducers.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/constants/cartConstants.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/actions/cartActions.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/reducers/userReducers.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/constants/userConstants.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/LoginPage.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/actions/userActions.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/FormContainer.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/ProfilePage.js",["154"],"import React,{useState,useEffect} from 'react'\nimport {Link} from 'react-router-dom'\nimport {Form,Button,Row,Col,Container} from 'react-bootstrap'\nimport {useDispatch,useSelector} from 'react-redux'\nimport Message from '../components/Message';\nimport Loader from '../components/Loader'\nimport {getUserDetails,updateUserProfile} from '../actions/userActions'\n\nconst ProfilePage = ({history}) => {\n    const [name,setName]=useState('');\n    const [email,setEmail]=useState('');\n    const [password,setPassword]=useState();\n    const [confirmPassword,setConfirmPassword]=useState();\n    const [message,setMessage]=useState(null)\n   const dispatch=useDispatch();\n   const userDetails=useSelector((state)=>state.userDetails)\n   const {loading,error,user}=userDetails;\n\n   const userLogin=useSelector((state)=>state.userLogin)\n  const {userInfo} =userLogin\n\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\n  const { success } = userUpdateProfile;\n\n  useEffect(()=>{\n      if(!userInfo){\n       history.push('/login')\n      }else{\n         if(!user.name){\n             dispatch(getUserDetails('profile'))\n         }else{\n             setName(userInfo.name)\n             setEmail(userInfo.email)\n         }\n      }\n  },[dispatch,history,userInfo,user,success])\n\n  const onSubmit=(e)=>{\n      e.preventDefault();\n      if(password!==confirmPassword){\n          setMessage('Passwords do not match')\n      }else{\n       dispatch(updateUserProfile({id:user._id,name,email,password})) \n      }\n  }\n    return (\n      <Container>\n        <Row>\n          <Col md={3}>\n            <h2>User Profile</h2>\n            {message && (\n              <Message variant=\"danger\" message={message}>\n                {message}\n              </Message>\n            )}\n            {error && (\n              <Message variant=\"danger\" message={error}>\n                {error}\n              </Message>\n            )}\n            {success && (\n              <Message\n                variant=\"success\"\n                message=\"Updated Successfully\"\n              ></Message>\n            )}\n            {loading && <Loader />}\n            <Form onSubmit={onSubmit}>\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"name\"\n                  placeholder=\"Enter name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  required\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Enter password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control\n                  type=\"password\"\n                  placeholder=\"Confirm password\"\n                  value={confirmPassword}\n                  onChange={(e) => setConfirmPassword(e.target.value)}\n                  required\n                ></Form.Control>\n              </Form.Group>\n\n              <Button type=\"submit\" variant=\"primary\">\n                Update\n              </Button>\n            </Form>\n          </Col>\n          <Col md={9}>\n            <h2>My orders</h2>\n          </Col>\n        </Row>\n      </Container>\n    );\n}\n\nexport default ProfilePage\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/RegisterPage.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/ShippingPage.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/components/CheckoutSteps.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/PaymentPage.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/PlaceOrderPage.js",["155"],"import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Row, Col, ListGroup, Image, Card, Container } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Message from \"../components/Message\";\nimport CheckoutSteps from \"../components/CheckoutSteps\";\nimport {createOrder} from '../actions/orderActions';\n\nconst PlaceOrderPage=({history})=>{\n    const dispatch = useDispatch();\n\n    const cart = useSelector((state) => state.cart);\n\n    cart.itemsPrice=cart.cartItems.reduce((total,item)=>total+item.price*item.qty,0);\n    cart.shippingPrice=cart.itemsPrice>500?0:50;\n    cart.taxPrice=Number((0.05*cart.itemsPrice).toFixed(2));\n    cart.totalPrice=(Number(cart.itemsPrice)+Number(cart.shippingPrice)+Number(cart.taxPrice)).toFixed(2)\n\n    const orderCreate=useSelector(state=>state.orderCreate)\n\n    const {order,success, error} =orderCreate\n\n    useEffect(()=>{\n        if(success){\n            history.push(`/order/${order._id}`)\n        }\n    },[history,success])\n    const placeOrder=()=>{\n        dispatch(\n          createOrder({\n            orderItems: cart.cartItems,\n            shippingAddress: cart.shippingAddress,\n            paymentMethod: cart.paymentMethod,\n            itemsPrice: cart.itemsPrice,\n            shippingPrice: cart.shippingPrice,\n            taxPrice: cart.taxPrice,\n            totalPrice: cart.totalPrice,\n          })\n        );\n    }\n    if (!cart.shippingAddress.address) {\n      history.push(\"/shipping\");\n    } else if (!cart.paymentMethod) {\n      history.push(\"/payment\");\n    }\n\n\n    return (\n      <Container>\n        <CheckoutSteps step1 step2 step3 step4 />\n        <Row>\n          <Col md={8}>\n            <ListGroup variant=\"flush\">\n              <ListGroup.Item>\n                <h2>Shipping</h2>\n                <p>\n                  <strong>Address:</strong>\n                  {cart.shippingAddress.address}, {cart.shippingAddress.city},{\" \"}\n                  {cart.shippingAddress.postalCode},{\" \"}\n                  {cart.shippingAddress.country}\n                </p>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <h2>Payment Method</h2>\n                <strong>Method:</strong>\n                {cart.paymentMethod}\n              </ListGroup.Item>\n\n              <ListGroup.Item>\n                <h2>Order Items</h2>\n                {cart.cartItems.length === 0 ? (\n                  <Message\n                    variant=\"info\"\n                    message=\"Your cart is empty\"\n                  ></Message>\n                ) : (\n                  <ListGroup variant=\"flush\">\n                    {cart.cartItems.map((item, index) => (\n                      <ListGroup.Item key={index}>\n                        <Row>\n                          <Col md={1}>\n                            <Image\n                              src={item.image}\n                              alt={item.name}\n                              fluid\n                              rounded\n                            />\n                          </Col>\n                          <Col>\n                            <Link to={`/product/${item.product}`}>\n                              {item.name}\n                            </Link>\n                          </Col>\n                          <Col md={4}>\n                            {item.qty} x ₹{item.price} = ₹{\" \"}\n                            {item.qty * item.price}\n                          </Col>\n                        </Row>\n                      </ListGroup.Item>\n                    ))}\n                  </ListGroup>\n                )}\n              </ListGroup.Item>\n            </ListGroup>\n          </Col>\n          <Col md={4}>\n            <Card>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Order Summary</h2>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Items</Col>\n                    <Col>₹ {cart.itemsPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Shipping</Col>\n                    <Col>₹ {cart.shippingPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>Tax</Col>\n                    <Col>₹ {cart.taxPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Row>\n                    <Col>total</Col>\n                    <Col>₹ {cart.totalPrice}</Col>\n                  </Row>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                    {error && <Message variant='danger' message={error}></Message>}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Button\n                    type=\"button\"\n                    className=\"btn-block\"\n                    disabled={cart.cartItems === 0}\n                    onClick={placeOrder}\n                  >\n                    Place Order\n                  </Button>\n                </ListGroup.Item>\n              </ListGroup>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    );\n}\nexport default PlaceOrderPage","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/reducers/orderReducers.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/constants/orderConstants.js",[],"/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/actions/orderActions.js",["156"],"import axios from \"axios\";\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_CREATE_RESET,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_FAIL,\n} from \"../constants/orderConstants\";\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        authorization: `${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.post(\n      `http://localhost:5000/api/orders/`,\n      order,\n      config\n    );\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: data,\n    });\n   \n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message;\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n        authorization: `${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.get(\n      `http://localhost:5000/api/orders/${id}`,\n      config\n    );\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message =error.message;\n    // if (message === \"Not authorized, token failed\") {\n    //   dispatch(logout());\n    // }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    });\n  }\n};\n\nexport const payOrder = (orderId,paymentResult) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    });\n\n    const {\n      userLogin: { userInfo },\n    } = getState();\n\n    const config = {\n      headers: {\n          'Content-Type':'application/json',\n        authorization: `${userInfo.token}`,\n      },\n    };\n\n    const { data } = await axios.put(\n      `http://localhost:5000/api/orders/${orderId}/pay`,paymentResult,\n      config\n    );\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    });\n  } catch (error) {\n    const message = error.message;\n    // if (message === \"Not authorized, token failed\") {\n    //   dispatch(logout());\n    // }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    });\n  }\n};\n\n\n","/Users/prasadvallabhaneni/Desktop/Guvu-Tasks/ReactProjects/homefoods/frontend/src/pages/OrderPage.js",["157"],"import React, { useState,useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Row,\n  Col,\n  ListGroup,\n  Image,\n  Card,\n  Container,\n} from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {PayPalButton} from 'react-paypal-button-v2';\nimport axios from 'axios';\nimport Message from \"../components/Message\";\nimport Loader from \"../components/Loader\";\nimport { getOrderDetails, payOrder } from \"../actions/orderActions\";\nimport {ORDER_PAY_RESET} from '../constants/orderConstants';\nconst OrderPage = ({ match }) => {\n  \nconst orderId=match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const dispatch = useDispatch();\n  const orderDetails = useSelector((state) => state.orderDetails); \n\n  const { order, loading, error } = orderDetails;\n\n  const orderPay = useSelector((state) => state.orderPay);\n\n  const { success:successPay, loading:loadingPay } = orderPay;\n  \n  if(!loading){\n      order.itemsPrice = order.orderItems.reduce(\n        (total, item) => total + item.price * item.qty,\n        0\n      );\n  }\n  useEffect(() => {\n      const addPaypalScript=async()=>{\n          const {data:clientId}=await axios.get('http://localhost:5000/api/config/paypal');\n          \n        const script=document.createElement('script');\n        script.type='text/javascript';\n        script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n        script.async=true;\n   document.body.appendChild(script);      \nscript.onload=()=>{\n    setSdkReady(true);\n   \n}\n\n      }\n    if(!order || successPay){\n        dispatch({type:ORDER_PAY_RESET})\ndispatch(getOrderDetails(orderId));\n    }else if(!order.isPaid){\n      \n        if(!window.paypal){\n            addPaypalScript()\n        }else{\n            setSdkReady(true)\n        }\n    }\n    \n  }, [dispatch,orderId,successPay,order]);\n  \n\n  const successPayment=(paymentResult)=>{\nconsole.log(paymentResult)\ndispatch(payOrder(orderId,paymentResult))\n  }\n  return (\n    <Container>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant=\"danger\" message={error}></Message>\n      ) : (\n        <>\n          <h1>Order {order._id}</h1>\n\n          <Row>\n            <Col md={8}>\n              <ListGroup variant=\"flush\">\n                <ListGroup.Item>\n                  <h2>Shipping</h2>\n                  <p>\n                    {\" \"}\n                    <strong>Name: </strong>\n                    {order.user.name}\n                  </p>\n                  <p>\n                    {\" \"}\n                    <strong>Email: </strong>\n                    <a href={`mailto:${order.user.email}`}>\n                      {order.user.email}\n                    </a>\n                  </p>\n                  <p>\n                    <strong>Address:</strong>\n                    {order.shippingAddress.address},{\" \"}\n                    {order.shippingAddress.city},{\" \"}\n                    {order.shippingAddress.postalCode},{\" \"}\n                    {order.shippingAddress.country}\n                  </p>\n                  {order.isDelivered ? (\n                    <Message\n                      variant=\"success\"\n                      message={`Delivered on ${order.deliveredAt}`}\n                    ></Message>\n                  ) : (\n                    <Message variant=\"info\" message=\"Not delivered\"></Message>\n                  )}\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <h2>Payment Method</h2>\n                  <p>\n                    <strong>Method:</strong>\n                    {order.paymentMethod}\n                  </p>\n                  {order.isPaid ? (\n                    <Message\n                      variant=\"success\"\n                      message={`paid on ${order.paidAt}`}\n                    ></Message>\n                  ) : (\n                    <Message variant=\"danger\" message=\"Not paid\"></Message>\n                  )}\n                </ListGroup.Item>\n\n                <ListGroup.Item>\n                  <h2>Order Items</h2>\n                  {order.orderItems.length === 0 ? (\n                    <Message\n                      variant=\"info\"\n                      message=\"Your order is empty\"\n                    ></Message>\n                  ) : (\n                    <ListGroup variant=\"flush\">\n                      {order.orderItems.map((item, index) => (\n                        <ListGroup.Item key={index}>\n                          <Row>\n                            <Col md={1}>\n                              <Image\n                                src={item.image}\n                                alt={item.name}\n                                fluid\n                                rounded\n                              />\n                            </Col>\n                            <Col>\n                              <Link to={`/product/${item.product}`}>\n                                {item.name}\n                              </Link>\n                            </Col>\n                            <Col md={4}>\n                              {item.qty} x ₹{item.price} = ₹{\" \"}\n                              {item.qty * item.price}\n                            </Col>\n                          </Row>\n                        </ListGroup.Item>\n                      ))}\n                    </ListGroup>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n            <Col md={4}>\n              <Card>\n                <ListGroup variant=\"flush\">\n                  <ListGroup.Item>\n                    <h2>Order Summary</h2>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Items</Col>\n                      <Col>₹ {order.itemsPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Shipping</Col>\n                      <Col>₹ {order.shippingPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Tax</Col>\n                      <Col>₹ {order.taxPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>total</Col>\n                      <Col>₹ {order.totalPrice}</Col>\n                    </Row>\n                  </ListGroup.Item>\n                  {!order.isPaid && (\n                      <ListGroup.Item>\n                          {loadingPay && <Loader/>}\n                          {!sdkReady?<Loader/>:(\n                              <PayPalButton amount={order.totalPrice} onSuccess={successPayment}/>\n                          )}\n                      </ListGroup.Item>\n                  )}\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n        </>\n      )}\n    </Container>\n  );\n};\nexport default OrderPage;\n",{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","severity":1,"message":"163","line":1,"column":15,"nodeType":"164","messageId":"165","endLine":1,"endColumn":23},{"ruleId":"162","severity":1,"message":"163","line":1,"column":16,"nodeType":"164","messageId":"165","endLine":1,"endColumn":24},{"ruleId":"166","severity":1,"message":"167","line":13,"column":15,"nodeType":"168","endLine":15,"endColumn":6},{"ruleId":"166","severity":1,"message":"167","line":26,"column":13,"nodeType":"168","endLine":29,"endColumn":4},{"ruleId":"166","severity":1,"message":"169","line":29,"column":6,"nodeType":"170","endLine":29,"endColumn":8,"suggestions":"171"},{"ruleId":"172","severity":1,"message":"173","line":110,"column":52,"nodeType":"174","messageId":"175","endLine":110,"endColumn":54},{"ruleId":"162","severity":1,"message":"176","line":2,"column":9,"nodeType":"164","messageId":"165","endLine":2,"endColumn":13},{"ruleId":"166","severity":1,"message":"177","line":27,"column":7,"nodeType":"170","endLine":27,"endColumn":24,"suggestions":"178"},{"ruleId":"162","severity":1,"message":"179","line":6,"column":3,"nodeType":"164","messageId":"165","endLine":6,"endColumn":21},{"ruleId":"162","severity":1,"message":"180","line":4,"column":3,"nodeType":"164","messageId":"165","endLine":4,"endColumn":9},"no-native-reassign",["181"],"no-negated-in-lhs",["182"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["183"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["184"],"'ORDER_CREATE_RESET' is defined but never used.","'Button' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"189","text":"190"},"Update the dependencies array to be: [history, order._id, success]",{"range":"191","text":"192"},[908,910],"[dispatch, props.match.params.id]",[1025,1042],"[history, order._id, success]"]